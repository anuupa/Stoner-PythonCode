{"name":"Stoner-pythoncode","tagline":"Stoner Python module repository","body":"Stoner-PythonCode\r\n=================\r\n\r\nIntroduction\r\n------------\r\n\r\nThe  *Stoner* Python package is a set of utility classes for writing data analysis code. It was written within \r\nthe Condensed Matter Physics group at the University of Leeds as a shared resource for quickly writing simple \r\nprograms to do things like fitting functions to data, extract curve parameters and churn through large numbers of \r\nsmall text data files.\r\n\r\nFor a general introduction, users are referred to the Users Guide pdf file that can be found in the *doc/UserGuide* directory in \r\nthe github repository.  There is also an API reference in the form of a compiled help file in the *doc* directory that is \r\ngenerated with Sphinx from the embedded docstrings in the source code.\r\n\r\nGetting this Code\r\n-----------------\r\n\r\nThe *Stoner* package requires numpy >=1.4, scipy >=0.12, matplotlib >=1.1 and h5py. Experimental code also makes use of\r\nthe Enthought Tools Suite packages.\r\n\r\nThe easiest way to install this code is via seuptools' easy_install:\r\n\r\n    easy_install Stoner\r\n    \r\n This will install the Stoner package into your current Python environment. Since the package is under fairly\r\n constant updates, you might want to follow the development with git. The source code, along with example scripts\r\n and some sample data files can be obtained from the github repository: https://github.com/gb119/Stoner-PythonCode\r\n \r\nOverview\r\n--------\r\n\r\nThe **Stoner** package provides two basic top-level classes that describe an individual file of experimental data and a \r\nlist (such as a directory tree on disc) of many experimental files. For our research, a typical single experimental data file\r\nis essentially a single 2D table of floating point numbers with associated metadata, usually saved in some\r\nASCII text format. This seems to cover most experiments in the physical sciences, but it you need a more complex \r\nformat with more dimensions of data, we suggest you look elsewhere.\r\n \r\n### DataFile and Friends\r\n\r\n**Stoner.Core.DataFile** is the base class for representing individual experimental data sets. \r\nIt provides basic methods to examine and manipulate data, manage metadata and load and save data files. \r\nIt has a large number of sub classes - most of these are in Stoner.FileFormats and are used to handle the loading of specific \r\nfile formats. Two, however, contain additional functionality for writing analysis programs.\r\n     \r\n*   **Stoner.Analysis.AnalyseFile** provides additional methods for curve-fitting, differentiating, smoothing and carrying out \r\nbasic calculations on data. \r\n\r\n* **Stoner.Plot.PlotFile** provides additional routines for plotting data on 2D or 3D plots. \r\n    \r\nAs mentioned above, there are subclasses of **DataFile** in the **Stoner.FileFormats** module that support \r\nloading many of the common file formats used in our research.\r\n\r\n### DataFolder\r\n\r\n**Stoner.Folders.DataFolder** is a class for assisting with the work of processing lots of files in a common directory \r\nstructure. It provides methods to list. filter and group data according to filename patterns or metadata and then to execute\r\na function on each file or group of files.\r\n\r\nThe **Stoner.HDF5** module provides some experimental classes to manipulate *DataFile* and *DataFolder* objects within HDF5\r\nformat files. These are not a way to handle arbitary HDF5 files - the format is much to complex and flexible to make that\r\nan easy task, rather it is a way to work with large numbers of experimental sets using just a single file which may be less\r\nbrutal to your computer's OS than having directory trees with millions of individual files.\r\n \r\nResources\r\n--------- \r\nIncluded in the source repository are a (small) collection of sample scripts for carrying out various operations and some sample data \r\nfiles for testing the loading and processing of data. Finally, this folder contains the LaTeX source code, dvi \r\nfile and pdf version of the User Guide and this compiled help file which has been gerneated by Sphinx from the \r\ncontents of the python docstrings in the source code.  The User Guide is partially ported to Sphinx format and is embedded in\r\nthe API documentation.\r\n\r\nContact and Licensing\r\n----------------------\r\nThe lead developer for this code is Dr Gavin Burnell <g.burnell@leeds.ac.uk> http://www.stoner.leeds.ac.uk/people/gb. \r\nThe Users Guide gives the current list of other contributors to the project.\r\n\r\nThis code and the sample data are all (C) The University of Leeds 2008-2014 unless otherwise indicated in the source file. \r\nThe contents of this package are licensed under the terms of the GNU Public License v3","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}